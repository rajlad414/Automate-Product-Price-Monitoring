<Activity mc:Ignorable="sap sap2010" x:Class="IfProductMatched" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CurrentAmazonRow" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_CurrentFlipkartRow" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Product" Type="InArgument(x:String)" />
    <x:Property Name="in_MatchIndex" Type="InArgument(x:Int32)" />
    <x:Property Name="io_dt_ErrorsDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="io_LPDictionary" Type="InOutArgument(scg:Dictionary(x:Int32, scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="out_MatchedData" Type="OutArgument(s:Object[])" />
    <x:Property Name="in_AmazonApplicationScope" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_FlipkartApplicationScope" Type="InArgument(ui:UiElement)" />
  </x:Members>
  <this:IfProductMatched.in_CurrentAmazonRow>
    <InArgument x:TypeArguments="sd:DataRow" />
  </this:IfProductMatched.in_CurrentAmazonRow>
  <this:IfProductMatched.in_CurrentFlipkartRow>
    <InArgument x:TypeArguments="sd:DataRow" />
  </this:IfProductMatched.in_CurrentFlipkartRow>
  <this:IfProductMatched.in_AmazonApplicationScope>
    <InArgument x:TypeArguments="ui:UiElement" />
  </this:IfProductMatched.in_AmazonApplicationScope>
  <this:IfProductMatched.in_FlipkartApplicationScope>
    <InArgument x:TypeArguments="ui:UiElement" />
  </this:IfProductMatched.in_FlipkartApplicationScope>
  <sap:VirtualizedContainerService.HintSize>1233,3673</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Calculate the price difference if any and create the report for lower price(LP) product." DisplayName="If Product Matched Sequence" sap:VirtualizedContainerService.HintSize="688,3608" sap2010:WorkflowViewState.IdRef="Sequence_25">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="AmazonURL" />
      <Variable x:TypeArguments="x:String" Name="AmazonProductTitle" />
      <Variable x:TypeArguments="x:String" Name="AmazonMRP" />
      <Variable x:TypeArguments="x:String" Name="AmazonSP" />
      <Variable x:TypeArguments="x:String" Name="AmazonDiscount" />
      <Variable x:TypeArguments="x:String" Name="FlipkartURL" />
      <Variable x:TypeArguments="x:String" Name="FlipkartProductTitle" />
      <Variable x:TypeArguments="x:String" Name="FlipkartMRP" />
      <Variable x:TypeArguments="x:String" Name="FlipkartSP" />
      <Variable x:TypeArguments="x:String" Name="FlipkartDiscount" />
      <Variable x:TypeArguments="x:Double" Name="PriceDifference" />
      <Variable x:TypeArguments="x:String" Name="PercentageDifference" />
      <Variable x:TypeArguments="x:Double" Name="AmazonDblPrice" />
      <Variable x:TypeArguments="x:Double" Default="[Nothing]" Name="FlipkartDblPrice" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="LPAmazonProductDict" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="LPFlipkartProductDict" />
      <Variable x:TypeArguments="x:String" Name="Offers" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Find Matched Process - Log Message" sap:VirtualizedContainerService.HintSize="626,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Matched found for &quot; + in_CurrentFlipkartRow(&quot;Title&quot;).ToString + &quot; &quot; + in_CurrentFlipkartRow(&quot;RAM&quot;).ToString]" />
    <ui:MultipleAssign DisplayName="Extract the product details for both Amazon and Flipkart" sap:VirtualizedContainerService.HintSize="626,489" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AmazonURL]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentAmazonRow("URL").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AmazonProductTitle]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentAmazonRow("Title").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AmazonMRP]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentAmazonRow("Original Price").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AmazonSP]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentAmazonRow("Selling Price").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AmazonDiscount]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentAmazonRow("Discount Percentage").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FlipkartURL]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentFlipkartRow("URL").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FlipkartProductTitle]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentFlipkartRow("Title").ToString + " " + in_CurrentFlipkartRow("RAM").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FlipkartMRP]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentFlipkartRow("Original Price").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FlipkartSP]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentFlipkartRow("Selling Price").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FlipkartDiscount]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_CurrentFlipkartRow("Discount Percentage").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Double">[PriceDifference]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Double">[Nothing]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PercentageDifference]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:IfElseIfV2 Condition="[Not (String.IsNullOrEmpty(AmazonSP) Or String.IsNullOrEmpty(FlipkartSP))]" DisplayName="Get Amazon Product Price and Flipkart Product Price" sap:VirtualizedContainerService.HintSize="626,1518" sap2010:WorkflowViewState.IdRef="IfElseIfV2_3">
      <ui:IfElseIfV2.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_38">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </ui:IfElseIfV2.Else>
      <ui:IfElseIfV2.ElseIfs>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Not (String.IsNullOrEmpty(AmazonSP) Or String.IsNullOrEmpty(FlipkartMRP))]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="541,258" sap2010:WorkflowViewState.IdRef="Sequence_36">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Get Amazon SP and Flipkart MRP" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[AmazonDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(AmazonSP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[FlipkartDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(FlipkartMRP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Not (String.IsNullOrEmpty(AmazonMRP) Or String.IsNullOrEmpty(FlipkartSP))]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="541,258" sap2010:WorkflowViewState.IdRef="Sequence_35">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Get Amazon MRP and Flipkart SP" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[AmazonDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(AmazonMRP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[FlipkartDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(FlipkartSP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Not (String.IsNullOrEmpty(AmazonMRP) Or String.IsNullOrEmpty(FlipkartMRP))]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_4">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="541,258" sap2010:WorkflowViewState.IdRef="Sequence_37">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Get Amazon MRP and Flipkart MRP" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[AmazonDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(AmazonMRP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[FlipkartDblPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(FlipkartMRP, "[^\d\,]", ""))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIfV2.ElseIfs>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:IfElseIfV2.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="541,258" sap2010:WorkflowViewState.IdRef="Sequence_34">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Get Amazon and Flipkart SP" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[AmazonDblPrice]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(AmazonSP, "[^\d\,]", ""))]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[FlipkartDblPrice]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[CDbl(Regex.Replace(FlipkartSP, "[^\d\,]", ""))]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </ui:IfElseIfV2.Then>
    </ui:IfElseIfV2>
    <If Condition="[Not (String.IsNullOrEmpty(AmazonSP) Or String.IsNullOrEmpty(FlipkartSP))]" DisplayName="If_Amazon or Flipkart Product Price is Not Null" sap:VirtualizedContainerService.HintSize="626,1204" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="592,931" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Create the Dictionary for Both Platform Product and Calculate PriceDiff and PercentageDiff" sap:VirtualizedContainerService.HintSize="530,241" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[LPAmazonProductDict]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String) From { {"Product Title", AmazonProductTitle}, {"Product URL", AmazonURL}, {"MRP", AmazonMRP}, {"SP", AmazonSP}, {"Discount", AmazonDiscount}, {"Offers", Offers}}]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[LPFlipkartProductDict]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String) From { {"Product Title", FlipkartProductTitle}, {"Product URL", FlipkartURL}, {"MRP", FlipkartMRP}, {"SP", FlipkartSP}, {"Discount", FlipkartDiscount}, {"Offers", Offers} }]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[PriceDifference]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[Math.Abs(AmazonDblPrice - FlipkartDblPrice)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[PercentageDifference]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[((PriceDifference) / If(AmazonDblPrice &gt; FlipkartDblPrice, AmazonDblPrice, FlipkartDblPrice) * 100).ToString("0.00")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <If Condition="[PriceDifference &gt; 0]" DisplayName="If_PriceDiff &gt; 0" sap:VirtualizedContainerService.HintSize="530,602" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,338" sap2010:WorkflowViewState.IdRef="Sequence_39">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Set Matched Index with the LP Item" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[io_LPDictionary(in_MatchIndex)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[If(AmazonDblPrice &lt; FlipkartDblPrice, LPAmazonProductDict, LPFlipkartProductDict)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="APPM\ExtractLPProductData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="APPM\ExtractLPProductData.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_MatchIndex">
                      <VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="in_MatchIndex" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Product">
                      <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Product" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAmazonProduct">
                      <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="AmazonDblPrice &lt; FlipkartDblPrice" />
                    </InArgument>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ErrorsDT">
                      <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="io_dt_ErrorsDT" />
                    </InOutArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:Int32, scg:Dictionary(x:String, x:String))" x:Key="io_LPDictionary">
                      <VisualBasicReference x:TypeArguments="scg:Dictionary(x:Int32, scg:Dictionary(x:String, x:String))" ExpressionText="io_LPDictionary" />
                    </InOutArgument>
                    <InArgument x:TypeArguments="ui:UiElement" x:Key="in_AmazonApplicationScope">
                      <VisualBasicValue x:TypeArguments="ui:UiElement" ExpressionText="in_AmazonApplicationScope" />
                    </InArgument>
                    <InArgument x:TypeArguments="ui:UiElement" x:Key="in_FlipkartApplicationScope">
                      <VisualBasicValue x:TypeArguments="ui:UiElement" ExpressionText="in_FlipkartApplicationScope" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_40">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Assign - MatchedData" sap:VirtualizedContainerService.HintSize="626,105" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Object[]">[out_MatchedData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Object[]">[new Object() {AmazonURL, AmazonProductTitle, AmazonMRP, AmazonSP, AmazonDiscount, FlipkartURL, FlipkartProductTitle, FlipkartMRP, FlipkartSP, FlipkartDiscount, PriceDifference, PercentageDifference}]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>